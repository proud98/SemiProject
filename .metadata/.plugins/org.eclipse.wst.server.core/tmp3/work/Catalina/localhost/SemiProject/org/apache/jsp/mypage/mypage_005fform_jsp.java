/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-20 08:30:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.dto.CommuDto;
import data.dao.CommuDao;
import java.util.List;
import data.dao.UserDao;
import data.dto.UserDto;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class mypage_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("data.dao.CommuDao");
    _jspx_imports_classes.add("data.dto.UserDto");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("data.dto.CommuDto");
    _jspx_imports_classes.add("data.dao.UserDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>WPICK</title>\r\n");
      out.write("<link rel=\"favicon\" href=\"../layout_image/titlelogo.ico\">\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"../layoutimage/x-icon\"\r\n");
      out.write("   href=\"../layout_image/titlelogo.ico\">\r\n");
      out.write("<link\r\n");
      out.write("   href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;700&family=Noto+Sans:wght@400;700&display=swap\"\r\n");
      out.write("   rel=\"stylesheet\">\r\n");
      out.write("<link href=\"css/info.css\" type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("   href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.3.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");

String loginok = (String) session.getAttribute("loginok");
String myid = (String) session.getAttribute("myid");

UserDao dao = new UserDao();
List<UserDto> list = dao.getAllUsers();

String user_num = request.getParameter("user_num");

//UserDto dto=dao.getData(user_num);

//커뮤니티 dao,dto
//CommuDao cdao = new CommuDao();

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("   <div class=\"myinfo_div\">\r\n");
      out.write("      <table style=\"width: 700px;\">\r\n");
      out.write("         <h3>회원정보</h3>\r\n");
      out.write("         <a class=\"editbtn\"\r\n");
      out.write("            href=\"index.jsp?main=mypage/mypage_myinfoupdate.jsp?user_num=");
      out.print(user_num);
      out.write("\">EDIT</a>\r\n");
      out.write("         <input type=\"hidden\" name=\"user_num\" value=\"");
      out.print(user_num);
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("         ");

         for (UserDto dto : list) {

            if (loginok != null) {

               if (dto.getUser_id().equals(myid)) {
         
      out.write("\r\n");
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th class=\"myinfo\" width=\"200\">이름</th>\r\n");
      out.write("            <td class=\"myinfo\" width=\"500\">&nbsp;&nbsp;&nbsp;");
      out.print(dto.getUser_name());
      out.write("</td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th class=\"myinfo\">닉네임</th>\r\n");
      out.write("            <td class=\"myinfo\">&nbsp;&nbsp;&nbsp;");
      out.print(dto.getUser_nickname());
      out.write("</td>\r\n");
      out.write("         </tr>\r\n");
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th class=\"myinfo\">아이디</th>\r\n");
      out.write("            <td class=\"myinfo\">&nbsp;&nbsp;&nbsp;");
      out.print(dto.getUser_id());
      out.write("</td>\r\n");
      out.write("         </tr>\r\n");
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th class=\"myinfo\" width=\"100\">비밀번호</th>\r\n");
      out.write("            <td class=\"myinfo\" width=\"250\">&nbsp;&nbsp;&nbsp;");
      out.print(dto.getUser_pw());
      out.write("</td>\r\n");
      out.write("         </tr>\r\n");
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th class=\"myinfo\">핸드폰번호</th>\r\n");
      out.write("            <td class=\"myinfo\">&nbsp;&nbsp;&nbsp;");
      out.print(dto.getUser_hp());
      out.write("</td>\r\n");
      out.write("         </tr>\r\n");
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th class=\"myinfo\" width=\"100\">주소</th>\r\n");
      out.write("            <td class=\"myinfo\" width=\"250\">&nbsp;&nbsp;&nbsp;");
      out.print(dto.getUser_addr());
      out.write("</td>\r\n");
      out.write("         </tr>\r\n");
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th class=\"myinfo\" width=\"100\">이메일</th>\r\n");
      out.write("            <td class=\"myinfo\" width=\"250\">&nbsp;&nbsp;&nbsp;");
      out.print(dto.getUser_email());
      out.write("</td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         ");

         }
         }
         }
         
      out.write("\r\n");
      out.write("      </table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      <a class=\"morebtn\" href='index.jsp?main=mypage/login_mypickpage.jsp'\">+MORE</a>\r\n");
      out.write("\r\n");
      out.write("      <h3 style=\"margin-bottom: 30px;\">MYPICK</h3>\r\n");
      out.write("      <div id=\"moviewrap_pick\">\r\n");
      out.write("\r\n");
      out.write("         <div class=\"pick\">\r\n");
      out.write("            <span class=\"glyphicon glyphicon-heart\" id=\"zzim\"></span>\r\n");
      out.write("         </div>\r\n");
      out.write("\r\n");
      out.write("         <!-- 최대 4개까지만 보이게 하기.. -->\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <a class=\"morebtn\"\r\n");
      out.write("         href='index.jsp?main=mypage/login_mypage_myreview.jsp'\">+MORE</a>\r\n");
      out.write("\r\n");
      out.write("      <table style=\"width: 1000px;\">\r\n");
      out.write("         <h3>내가 쓴 리뷰보기</h3>\r\n");
      out.write("         <tr class=\"tr_myinfo\">\r\n");
      out.write("            <th width=\"200\" class=\"myinfo\">영화제목</th>\r\n");
      out.write("            <th width=\"600\" class=\"myinfo\">리뷰</th>\r\n");
      out.write("            <th width=\"200\" class=\"myinfo\">날짜</th>\r\n");
      out.write("         </tr>\r\n");
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <td colspan=\"5\" align=\"center\" class=\"myinfo\">\r\n");
      out.write("               <h3>등록된 게시글이 없습니다</h3> <!-- 최대 8개까지만 보이게 하기.. -->\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("      </table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      <a class=\"morebtn\"\r\n");
      out.write("         href='index.jsp?main=mypage/login_mypage_mywrite.jsp'\">+MORE</a>\r\n");
      out.write("\r\n");
      out.write("      <table style=\"width: 1000px;\">\r\n");
      out.write("         <h3>내가 쓴 글보기</h3>\r\n");
      out.write("         <tr class=\"tr_myinfo\">\r\n");
      out.write("            <th width=\"200\" class=\"myinfo\">카테고리</th>\r\n");
      out.write("            <th width=\"800\" class=\"myinfo\">제목</th>\r\n");
      out.write("         </tr>\r\n");
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <td colspan=\"5\" align=\"center\" class=\"myinfo\">\r\n");
      out.write("               <h3>등록된 게시글이 없습니다</h3> <!-- 최대 8개까지만 보이게 하기.. -->\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("      </table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      <a class=\"morebtn\"\r\n");
      out.write("         href='index.jsp?main=mypage/login_mypage_mycomment.jsp'\">+MORE</a>\r\n");
      out.write("\r\n");
      out.write("      <table style=\"width: 1000px;\">\r\n");
      out.write("         <h3>내가쓴댓글보기</h3>\r\n");
      out.write("         <tr class=\"tr_myinfo\">\r\n");
      out.write("            <th width=\"200\" class=\"myinfo\">카테고리</th>\r\n");
      out.write("            <th width=\"800\" class=\"myinfo\">제목</th>\r\n");
      out.write("         </tr>\r\n");
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <td colspan=\"5\" align=\"center\" class=\"myinfo\">\r\n");
      out.write("               <h3>등록된 게시글이 없습니다</h3> <!-- 최대 8개까지만 보이게 하기.. -->\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("      </table>\r\n");
      out.write("   </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
